[{"/local/home/CE/musaeed/material-ui-tut/src/index.js":"1","/local/home/CE/musaeed/material-ui-tut/src/App.js":"2","/local/home/CE/musaeed/material-ui-tut/src/pages/Notes.js":"3","/local/home/CE/musaeed/material-ui-tut/src/pages/Create.js":"4","/local/home/CE/musaeed/material-ui-tut/src/components/Layout.js":"5","/local/home/CE/musaeed/material-ui-tut/src/components/NoteCard.js":"6"},{"size":455,"mtime":1662054767813,"results":"7","hashOfConfig":"8"},{"size":953,"mtime":1662054767813,"results":"9","hashOfConfig":"8"},{"size":1002,"mtime":1662055747671,"results":"10","hashOfConfig":"8"},{"size":3339,"mtime":1662054767813,"results":"11","hashOfConfig":"8"},{"size":3240,"mtime":1662145940613,"results":"12","hashOfConfig":"8"},{"size":1558,"mtime":1662054767813,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f1nyce",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/local/home/CE/musaeed/material-ui-tut/src/index.js",[],["30","31"],"/local/home/CE/musaeed/material-ui-tut/src/App.js",[],"/local/home/CE/musaeed/material-ui-tut/src/pages/Notes.js",["32"],"import React, { useEffect, useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch('/pcm_en')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n\n  const handleDelete = async (id) => {\n    await fetch('/pcm_en/' + id, {\n      method: 'DELETE'\n    })\n    const newNotes = notes.filter(note => note.id != id)\n    setNotes(newNotes)\n  }\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  )\n}\n","/local/home/CE/musaeed/material-ui-tut/src/pages/Create.js",["33","34"],"import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n    if (title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({ title, details, category })\n      }).then(() => history.push('/'))\n    } \n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\" \n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n      \n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Note Title\" \n          variant=\"outlined\" \n          color=\"secondary\" \n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\" \n          color=\"secondary\" \n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button>\n      </form>\n\n      \n    </Container>\n  )\n}\n","/local/home/CE/musaeed/material-ui-tut/src/components/Layout.js",["35"],"/local/home/CE/musaeed/material-ui-tut/src/components/NoteCard.js",["36","37","38"],"import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined'\nimport { makeStyles } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport { yellow, green, pink, blue } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == 'work') {\n        return yellow[700]\n      }\n      if (note.category == 'money') {\n        return green[500]\n      }\n      if (note.category == 'todos') {\n        return pink[500]\n      }\n      return blue[500]\n    },\n  }\n})\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note)\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>}\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            { note.details }\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":19,"column":51,"nodeType":"45","messageId":"46","endLine":19,"endColumn":53},{"ruleId":"43","severity":1,"message":"47","line":37,"column":15,"nodeType":"45","messageId":"46","endLine":37,"endColumn":17},{"ruleId":"43","severity":1,"message":"47","line":40,"column":17,"nodeType":"45","messageId":"46","endLine":40,"endColumn":19},{"ruleId":"43","severity":1,"message":"47","line":110,"column":44,"nodeType":"45","messageId":"46","endLine":110,"endColumn":46},{"ruleId":"43","severity":1,"message":"47","line":15,"column":25,"nodeType":"45","messageId":"46","endLine":15,"endColumn":27},{"ruleId":"43","severity":1,"message":"47","line":18,"column":25,"nodeType":"45","messageId":"46","endLine":18,"endColumn":27},{"ruleId":"43","severity":1,"message":"47","line":21,"column":25,"nodeType":"45","messageId":"46","endLine":21,"endColumn":27},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]