[{"/local/home/CE/musaeed/translation_app/src/index.js":"1","/local/home/CE/musaeed/translation_app/src/App.js":"2","/local/home/CE/musaeed/translation_app/src/pages/Notes.js":"3","/local/home/CE/musaeed/translation_app/src/pages/Create.js":"4","/local/home/CE/musaeed/translation_app/src/pages/CreateNote.js":"5","/local/home/CE/musaeed/translation_app/src/components/Layout.js":"6","/local/home/CE/musaeed/translation_app/src/context/notes.context.jsx":"7","/local/home/CE/musaeed/translation_app/src/components/NoteCard.js":"8","/local/home/CE/musaeed/translation_app/src/services/translation.js":"9","/local/home/CE/musaeed/translation_app/src/pages/ENtoPCM.js":"10","/local/home/CE/musaeed/translation_app/src/context/enpcm.context.jsx":"11","/local/home/CE/musaeed/translation_app/src/pages/discourse_classifier.js":"12","/local/home/CE/musaeed/translation_app/src/context/discourse_classifier.context.jsx":"13"},{"size":455,"mtime":1662507699248,"results":"14","hashOfConfig":"15"},{"size":1774,"mtime":1672429105533,"results":"16","hashOfConfig":"15"},{"size":1002,"mtime":1662507699248,"results":"17","hashOfConfig":"15"},{"size":3423,"mtime":1662735188331,"results":"18","hashOfConfig":"15"},{"size":3319,"mtime":1671521495543,"results":"19","hashOfConfig":"15"},{"size":3532,"mtime":1672427908430,"results":"20","hashOfConfig":"15"},{"size":1747,"mtime":1662508442407,"results":"21","hashOfConfig":"15"},{"size":1558,"mtime":1662507699248,"results":"22","hashOfConfig":"15"},{"size":1248,"mtime":1675067399112,"results":"23","hashOfConfig":"15"},{"size":3306,"mtime":1671521480619,"results":"24","hashOfConfig":"15"},{"size":1755,"mtime":1662808964548,"results":"25","hashOfConfig":"15"},{"size":3334,"mtime":1675073611545,"results":"26","hashOfConfig":"15"},{"size":1785,"mtime":1674942800456,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1pl0ykz",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/local/home/CE/musaeed/translation_app/src/index.js",[],["64","65"],"/local/home/CE/musaeed/translation_app/src/App.js",["66"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notes from \"./pages/Notes\";\nimport Create from \"./pages/Create\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\nimport { NoteFormProvider } from \"./context/notes.context\";\nimport {NoteFormProviderENPCM} from \"./context/enpcm.context\"\nimport { NoteFormProviderDiscourseClassifier } from \"./context/discourse_classifier.context\";\nimport CreateNote from \"./pages/CreateNote\";\nimport ENtoPCM from \"./pages/ENtoPCM\";\nimport DiscourseClassifier from\"./pages/discourse_classifier\"\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fefefe\",\n    },\n    secondary: purple,\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <NoteFormProvider>\n                <CreateNote />\n              </NoteFormProvider>\n            </Route>\n            <Route path=\"/enpcm\">\n              <NoteFormProviderENPCM>\n                <ENtoPCM />\n              </NoteFormProviderENPCM>\n            </Route>\n            <Route path=\"/discourse_classifier\">\n              <NoteFormProviderDiscourseClassifier>\n                <DiscourseClassifier />\n              </NoteFormProviderDiscourseClassifier>\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/local/home/CE/musaeed/translation_app/src/pages/Notes.js",["67"],"import React, { useEffect, useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch('/pcm_en')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n\n  const handleDelete = async (id) => {\n    await fetch('/pcm_en/' + id, {\n      method: 'DELETE'\n    })\n    const newNotes = notes.filter(note => note.id != id)\n    setNotes(newNotes)\n  }\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  )\n}\n","/local/home/CE/musaeed/translation_app/src/pages/Create.js",["68","69","70"],"import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles, TextareaAutosize } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('titlenotneeded')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n    if (title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({ title, details, category })\n      }).then(() => history.push('/create'))\n    } \n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\" \n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Please Enter Pidgin Text to be translated into English\n      </Typography>\n      \n      <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Please Type the PCM Text Here\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextareaAutosize className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Translated text\" \n          variant=\"outlined\" \n          color=\"secondary\" \n          fullWidth\n          \n        />\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Ernie\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Merel\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"PinJie\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Muhammed\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\" \n          color=\"secondary\" \n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Translate PCM to EN\n        </Button>\n      </form>\n\n      \n    </Container>\n  )\n}\n","/local/home/CE/musaeed/translation_app/src/pages/CreateNote.js",["71","72","73","74","75","76","77","78"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { useHistory } from \"react-router-dom\";\nimport useNoteForm from \"../context/notes.context\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n});\n\nconst CreateNote = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    note,\n    noteFormChanged,\n    handleSubmit,\n    titleError,\n    detailsError,\n    submitting,\n  } = useNoteForm();\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Please Enter PCM text to be translated into English\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n          className={classes.field}\n          onChange={(e) => noteFormChanged(\"details\", e.target.value)}\n          label=\"PCM To enlgish details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          value={note.details}\n          error={detailsError}\n        />\n\n        <TextField\n          className={classes.field}\n          onChange={(e) => noteFormChanged(\"title\", e.target.value)}\n          label=\"Translated Text \"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          multiline\n          rows={4}\n          \n          value={note.title}\n         \n        />\n       \n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        {/* <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={note.category}\n            onChange={(e) => noteFormChanged(\"category\", e.target.value)}\n          >\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Ernie\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Merel\" />\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"PinJie\"\n            />\n            <FormControlLabel\n              value=\"work\"\n              control={<Radio />}\n              label=\"Muhammed\"\n            />\n          </RadioGroup>\n        </FormControl> */}\n\n        {submitting ? (\n          <CircularProgress color=\"secondary\" />\n        ) : (\n          <Button\n            type=\"submit\"\n            color=\"secondary\"\n            variant=\"contained\"\n            endIcon={<KeyboardArrowRightIcon />}\n          >\n            Translate PCM to EN\n          </Button>\n        )}\n      </form>\n    </Container>\n  );\n};\n\nexport default CreateNote;\n","/local/home/CE/musaeed/translation_app/src/components/Layout.js",["79"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { format } from 'date-fns'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2)\n    }\n  }\n})\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const location = useLocation()\n\n  const menuItems = [\n    { \n      text: 'My Notes', \n      icon: <SubjectOutlined color=\"secondary\" />, \n      path: '/' \n    },\n    { \n      text: 'PCM to EN Translation', \n      icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n      path: '/create' \n    },\n    { \n      text: 'En to PCM Translation', \n      icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n      path: '/enpcm' \n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar \n        position=\"fixed\" \n        className={classes.appBar}\n        elevation={0}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today is the {format(new Date(), 'do MMMM Y')}\n          </Typography>\n          <Typography>Naija</Typography>\n          <Avatar className={classes.avatar} src=\"/pidgin.png\" />\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            PCM Translation Models\n          </Typography>\n        </div>\n\n        {/* links/list section */}\n        <List>\n          {menuItems.map((item) => (\n            <ListItem \n              button \n              key={item.text} \n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n        \n      </Drawer>\n\n      {/* main content */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        { children }\n      </div>\n    </div>\n  )\n}\n","/local/home/CE/musaeed/translation_app/src/context/notes.context.jsx",["80","81","82","83"],"import React, { createContext, useContext, useMemo, useState } from \"react\";\nimport { translateNote } from \"../services/translation\";\nimport {translateENtoPCM} from  \"../services/translation\"\nconst NoteFormContext = createContext({});\n\nexport const NoteFormProvider = ({ children }) => {\n  const [note, setNote] = useState({\n    title: \"wait the translation will appear here \",\n    details: \"\",\n    category: \"money\",\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  const noteFormChanged = (name, value) => {\n    setNote((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n    console.log(\"Are you here\");\n    if (note.title == \"\") {\n      setTitleError(true);\n    }\n    if (note.details == \"\") {\n      setDetailsError(true);\n    }\n    if (note.title && note.details) {\n      setSubmitting(true);\n      const result = await translateNote(note);\n      if (result) {\n        setSubmitting(false);\n        setNote((prevState) => {\n          return {\n            ...prevState,\n            title: result.translatedDetails,\n          };\n        });\n      }\n    }\n  };\n\n  const memoedValue = useMemo(\n    () => ({\n      note,\n      titleError,\n      detailsError,\n      noteFormChanged,\n      handleSubmit,\n      submitting,\n    }),\n    [note, submitting]\n  );\n  return (\n    <NoteFormContext.Provider value={memoedValue}>\n      {children}\n    </NoteFormContext.Provider>\n  );\n};\n\nexport default function useNoteForm() {\n  return useContext(NoteFormContext);\n}\n","/local/home/CE/musaeed/translation_app/src/components/NoteCard.js",["84","85","86"],"import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined'\nimport { makeStyles } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport { yellow, green, pink, blue } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == 'work') {\n        return yellow[700]\n      }\n      if (note.category == 'money') {\n        return green[500]\n      }\n      if (note.category == 'todos') {\n        return pink[500]\n      }\n      return blue[500]\n    },\n  }\n})\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note)\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>}\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            { note.details }\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","/local/home/CE/musaeed/translation_app/src/services/translation.js",[],"/local/home/CE/musaeed/translation_app/src/pages/ENtoPCM.js",["87","88","89","90","91","92","93","94"],"import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { useHistory } from \"react-router-dom\";\nimport useNoteForm from \"../context/enpcm.context\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n});\n\nconst ENtoPCM = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    note,\n    noteFormChanged,\n    handleSubmit,\n    titleError,\n    detailsError,\n    submitting,\n  } = useNoteForm();\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Please Enter English text to be translated into PCM\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n          className={classes.field}\n          onChange={(e) => noteFormChanged(\"details\", e.target.value)}\n          label=\"English to PCM text please\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          value={note.details}\n          error={detailsError}\n        />\n\n        <TextField\n          className={classes.field}\n          onChange={(e) => noteFormChanged(\"title\", e.target.value)}\n          label=\"Translated Text \"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          multiline\n          rows={4}\n          value={note.title}\n         \n        />\n       \n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        {/* <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup\n            value={note.category}\n            onChange={(e) => noteFormChanged(\"category\", e.target.value)}\n          >\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Ernie\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Merel\" />\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"PinJie\"\n            />\n            <FormControlLabel\n              value=\"work\"\n              control={<Radio />}\n              label=\"Muhammed\"\n            />\n          </RadioGroup>\n        </FormControl> */}\n\n        {submitting ? (\n          <CircularProgress color=\"secondary\" />\n        ) : (\n          <Button\n            type=\"submit\"\n            color=\"secondary\"\n            variant=\"contained\"\n            endIcon={<KeyboardArrowRightIcon />}\n          >\n            Translate EN to PCM\n          </Button>\n        )}\n      </form>\n    </Container>\n  );\n};\n\nexport default ENtoPCM;\n","/local/home/CE/musaeed/translation_app/src/context/enpcm.context.jsx",["95","96","97","98"],"import React, { createContext, useContext, useMemo, useState } from \"react\";\nimport { translateNote } from \"../services/translation\";\nimport {translateENtoPCM} from  \"../services/translation\"\nconst NoteFormContext = createContext({});\n\nexport const NoteFormProviderENPCM = ({ children }) => {\n  const [note, setNote] = useState({\n    title: \"wait the translation will appear here \",\n    details: \"\",\n    category: \"money\",\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  const noteFormChanged = (name, value) => {\n    setNote((prevState) => {\n      return {\n        ...prevState,\n        [name]: value,\n      };\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n    console.log(\"Are you here\");\n    if (note.title == \"\") {\n      setTitleError(true);\n    }\n    if (note.details == \"\") {\n      setDetailsError(true);\n    }\n    if (note.title && note.details) {\n      setSubmitting(true);\n      const result = await translateENtoPCM(note);\n      if (result) {\n        setSubmitting(false);\n        setNote((prevState) => {\n          return {\n            ...prevState,\n            title: result.translatedDetails,\n          };\n        });\n      }\n    }\n  };\n\n  const memoedValue = useMemo(\n    () => ({\n      note,\n      titleError,\n      detailsError,\n      noteFormChanged,\n      handleSubmit,\n      submitting,\n    }),\n    [note, submitting]\n  );\n  return (\n    <NoteFormContext.Provider value={memoedValue}>\n      {children}\n    </NoteFormContext.Provider>\n  );\n};\n\nexport default function useNoteForm() {\n  return useContext(NoteFormContext);\n}\n","/local/home/CE/musaeed/translation_app/src/pages/discourse_classifier.js",["99","100","101","102","103","104","105","106"],"/local/home/CE/musaeed/translation_app/src/context/discourse_classifier.context.jsx",["107","108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":19,"column":51,"nodeType":"121","messageId":"122","endLine":19,"endColumn":53},{"ruleId":"115","severity":1,"message":"123","line":28,"column":10,"nodeType":"117","messageId":"118","endLine":28,"endColumn":20},{"ruleId":"119","severity":1,"message":"124","line":37,"column":15,"nodeType":"121","messageId":"122","endLine":37,"endColumn":17},{"ruleId":"119","severity":1,"message":"124","line":40,"column":17,"nodeType":"121","messageId":"122","endLine":40,"endColumn":19},{"ruleId":"115","severity":1,"message":"125","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"126","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":13},{"ruleId":"115","severity":1,"message":"127","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":18},{"ruleId":"115","severity":1,"message":"128","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":24},{"ruleId":"115","severity":1,"message":"129","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":19},{"ruleId":"115","severity":1,"message":"130","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"115","severity":1,"message":"131","line":26,"column":9,"nodeType":"117","messageId":"118","endLine":26,"endColumn":16},{"ruleId":"115","severity":1,"message":"123","line":31,"column":5,"nodeType":"117","messageId":"118","endLine":31,"endColumn":15},{"ruleId":"119","severity":1,"message":"124","line":115,"column":44,"nodeType":"121","messageId":"122","endLine":115,"endColumn":46},{"ruleId":"115","severity":1,"message":"132","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":25},{"ruleId":"119","severity":1,"message":"124","line":29,"column":20,"nodeType":"121","messageId":"122","endLine":29,"endColumn":22},{"ruleId":"119","severity":1,"message":"124","line":32,"column":22,"nodeType":"121","messageId":"122","endLine":32,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":59,"column":5,"nodeType":"135","endLine":59,"endColumn":23,"suggestions":"136"},{"ruleId":"119","severity":1,"message":"124","line":15,"column":25,"nodeType":"121","messageId":"122","endLine":15,"endColumn":27},{"ruleId":"119","severity":1,"message":"124","line":18,"column":25,"nodeType":"121","messageId":"122","endLine":18,"endColumn":27},{"ruleId":"119","severity":1,"message":"124","line":21,"column":25,"nodeType":"121","messageId":"122","endLine":21,"endColumn":27},{"ruleId":"115","severity":1,"message":"125","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"126","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":13},{"ruleId":"115","severity":1,"message":"127","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":18},{"ruleId":"115","severity":1,"message":"128","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":24},{"ruleId":"115","severity":1,"message":"129","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":19},{"ruleId":"115","severity":1,"message":"130","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"115","severity":1,"message":"131","line":26,"column":9,"nodeType":"117","messageId":"118","endLine":26,"endColumn":16},{"ruleId":"115","severity":1,"message":"123","line":31,"column":5,"nodeType":"117","messageId":"118","endLine":31,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"119","severity":1,"message":"124","line":29,"column":20,"nodeType":"121","messageId":"122","endLine":29,"endColumn":22},{"ruleId":"119","severity":1,"message":"124","line":32,"column":22,"nodeType":"121","messageId":"122","endLine":32,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":59,"column":5,"nodeType":"135","endLine":59,"endColumn":23,"suggestions":"138"},{"ruleId":"115","severity":1,"message":"125","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"126","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":13},{"ruleId":"115","severity":1,"message":"127","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":18},{"ruleId":"115","severity":1,"message":"128","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":24},{"ruleId":"115","severity":1,"message":"129","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":19},{"ruleId":"115","severity":1,"message":"130","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"115","severity":1,"message":"131","line":26,"column":9,"nodeType":"117","messageId":"118","endLine":26,"endColumn":16},{"ruleId":"115","severity":1,"message":"123","line":31,"column":5,"nodeType":"117","messageId":"118","endLine":31,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"119","severity":1,"message":"124","line":29,"column":20,"nodeType":"121","messageId":"122","endLine":29,"endColumn":22},{"ruleId":"119","severity":1,"message":"124","line":32,"column":22,"nodeType":"121","messageId":"122","endLine":32,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":59,"column":5,"nodeType":"135","endLine":59,"endColumn":23,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'titleError' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useState' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'history' is assigned a value but never used.","'translateENtoPCM' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'detailsError', 'handleSubmit', and 'titleError'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'translateNote' is defined but never used.",["143"],["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"145","fix":"148"},"Update the dependencies array to be: [detailsError, handleSubmit, note, submitting, titleError]",{"range":"149","text":"150"},{"range":"151","text":"150"},{"range":"152","text":"150"},[1523,1541],"[detailsError, handleSubmit, note, submitting, titleError]",[1531,1549],[1561,1579]]