[{"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\index.js":"1","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\App.js":"2","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\Create.js":"3","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\CreateNote.js":"4","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\components\\Layout.js":"5","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\Notes.js":"6","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\context\\notes.context.jsx":"7","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\components\\NoteCard.js":"8","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\services\\translation.js":"9"},{"size":472,"mtime":1662160757613,"results":"10","hashOfConfig":"11"},{"size":1188,"mtime":1662161004853,"results":"12","hashOfConfig":"11"},{"size":3526,"mtime":1662212270895,"results":"13","hashOfConfig":"11"},{"size":3395,"mtime":1662212270896,"results":"14","hashOfConfig":"11"},{"size":3375,"mtime":1662202236470,"results":"15","hashOfConfig":"11"},{"size":1045,"mtime":1662160757613,"results":"16","hashOfConfig":"11"},{"size":1736,"mtime":1662212300996,"results":"17","hashOfConfig":"11"},{"size":1613,"mtime":1662160757613,"results":"18","hashOfConfig":"11"},{"size":402,"mtime":1662204609978,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v5k0dj",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\index.js",[],["43","44"],"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\App.js",["45"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Notes from \"./pages/Notes\";\r\nimport Create from \"./pages/Create\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport Layout from \"./components/Layout\";\r\nimport { NoteFormProvider } from \"./context/notes.context\";\r\nimport CreateNote from \"./pages/CreateNote\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fefefe\",\r\n    },\r\n    secondary: purple,\r\n  },\r\n  typography: {\r\n    fontFamily: \"Quicksand\",\r\n    fontWeightLight: 400,\r\n    fontWeightRegular: 500,\r\n    fontWeightMedium: 600,\r\n    fontWeightBold: 700,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Notes />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <NoteFormProvider>\r\n                <CreateNote />\r\n              </NoteFormProvider>\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\Create.js",["46","47","48"],"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\CreateNote.js",["49","50","51","52","53","54","55","56"],"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\components\\Layout.js",["57"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    page: {\r\n      background: '#f9f9f9',\r\n      width: '100%',\r\n      padding: theme.spacing(3),\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    active: {\r\n      background: '#f4f4f4'\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    date: {\r\n      flexGrow: 1\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    avatar: {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  }\r\n})\r\n\r\nexport default function Layout({ children }) {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const menuItems = [\r\n    { \r\n      text: 'My Notes', \r\n      icon: <SubjectOutlined color=\"secondary\" />, \r\n      path: '/' \r\n    },\r\n    { \r\n      text: 'PCM to EN Translation', \r\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />, \r\n      path: '/create' \r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* app bar */}\r\n      <AppBar \r\n        position=\"fixed\" \r\n        className={classes.appBar}\r\n        elevation={0}\r\n        color=\"primary\"\r\n      >\r\n        <Toolbar>\r\n          <Typography className={classes.date}>\r\n            Today is the {format(new Date(), 'do MMMM Y')}\r\n          </Typography>\r\n          <Typography>Naija</Typography>\r\n          <Avatar className={classes.avatar} src=\"/pidgin.png\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* side drawer */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{ paper: classes.drawerPaper }}\r\n        anchor=\"left\"\r\n      >\r\n        <div>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            PCM Translation Models\r\n          </Typography>\r\n        </div>\r\n\r\n        {/* links/list section */}\r\n        <List>\r\n          {menuItems.map((item) => (\r\n            <ListItem \r\n              button \r\n              key={item.text} \r\n              onClick={() => history.push(item.path)}\r\n              className={location.pathname == item.path ? classes.active : null}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        \r\n      </Drawer>\r\n\r\n      {/* main content */}\r\n      <div className={classes.page}>\r\n        <div className={classes.toolbar}></div>\r\n        { children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\pages\\Notes.js",["58"],"import React, { useEffect, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Masonry from 'react-masonry-css'\r\nimport NoteCard from '../components/NoteCard'\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/pcm_en')\r\n      .then(res => res.json())\r\n      .then(data => setNotes(data))\r\n  }, [])\r\n\r\n  const handleDelete = async (id) => {\r\n    await fetch('/pcm_en/' + id, {\r\n      method: 'DELETE'\r\n    })\r\n    const newNotes = notes.filter(note => note.id != id)\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  const breakpoints = {\r\n    default: 3,\r\n    1100: 2,\r\n    700: 1\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Masonry\r\n        breakpointCols={breakpoints}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\">\r\n        {notes.map(note => (\r\n          <div key={note.id}>\r\n            <NoteCard note={note} handleDelete={handleDelete} />\r\n          </div>\r\n        ))}\r\n      </Masonry>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\context\\notes.context.jsx",["59","60","61"],"C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\components\\NoteCard.js",["62","63","64"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { yellow, green, pink, blue } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: (note) => {\r\n      if (note.category == 'work') {\r\n        return yellow[700]\r\n      }\r\n      if (note.category == 'money') {\r\n        return green[500]\r\n      }\r\n      if (note.category == 'todos') {\r\n        return pink[500]\r\n      }\r\n      return blue[500]\r\n    },\r\n  }\r\n})\r\n\r\nexport default function NoteCard({ note, handleDelete }) {\r\n  const classes = useStyles(note)\r\n\r\n  return (\r\n    <div>\r\n      <Card elevation={1}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar className={classes.avatar}>\r\n              {note.category[0].toUpperCase()}\r\n            </Avatar>}\r\n          action={\r\n            <IconButton onClick={() => handleDelete(note.id)}>\r\n              <DeleteOutlined />\r\n            </IconButton>\r\n          }\r\n          title={note.title}\r\n          subheader={note.category}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            { note.details }\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}","C:\\Users\\asimz-abdalla\\Desktop\\other projects\\myahia\\translation_app\\src\\services\\translation.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":28,"column":10,"nodeType":"71","messageId":"72","endLine":28,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":37,"column":15,"nodeType":"76","messageId":"77","endLine":37,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":40,"column":17,"nodeType":"76","messageId":"77","endLine":40,"endColumn":19},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"79","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":18},{"ruleId":"69","severity":1,"message":"81","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":24},{"ruleId":"69","severity":1,"message":"82","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":19},{"ruleId":"69","severity":1,"message":"83","line":12,"column":8,"nodeType":"71","messageId":"72","endLine":12,"endColumn":17},{"ruleId":"69","severity":1,"message":"84","line":26,"column":9,"nodeType":"71","messageId":"72","endLine":26,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":31,"column":5,"nodeType":"71","messageId":"72","endLine":31,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":110,"column":44,"nodeType":"76","messageId":"77","endLine":110,"endColumn":46},{"ruleId":"74","severity":1,"message":"85","line":19,"column":51,"nodeType":"76","messageId":"77","endLine":19,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":29,"column":20,"nodeType":"76","messageId":"77","endLine":29,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":32,"column":22,"nodeType":"76","messageId":"77","endLine":32,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":59,"column":5,"nodeType":"88","endLine":59,"endColumn":23,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"75","line":15,"column":25,"nodeType":"76","messageId":"77","endLine":15,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":18,"column":25,"nodeType":"76","messageId":"77","endLine":18,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":21,"column":25,"nodeType":"76","messageId":"77","endLine":21,"endColumn":27},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'titleError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'history' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'detailsError', 'handleSubmit', and 'titleError'. Either include them or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [detailsError, handleSubmit, note, submitting, titleError]",{"range":"95","text":"96"},[1500,1518],"[detailsError, handleSubmit, note, submitting, titleError]"]