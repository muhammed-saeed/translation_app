{"ast":null,"code":"import axios from \"axios\";\n\nrequire('dotenv').config();\n\nexport const translateNote = async note => {\n  console.log(note);\n  const response = await axios.post(`${process.env.REACT_APP_API_2}/pcm_en`, {\n    title: note.title,\n    details: note.details,\n    cateogry: note.cateogry\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status === 200) return response.data;\n};\nexport const translateENtoPCM = async note => {\n  console.log(note);\n  const response = await axios.post(`${process.env.REACT_APP_API_2}/enpcm`, {\n    title: note.title,\n    details: note.details,\n    cateogry: note.cateogry\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status === 200) return response.data;\n};\nexport const discourse_classification = async note => {\n  console.log(note);\n  const response = await axios.post( // \"/api/parser\",\n  `${process.env.REACT_APP_API_1}/api/parser/`, // \"https://localhost:8080/discourseClassifier\",\n  {\n    title: note.title,\n    details: note.details,\n    cateogry: note.cateogry\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status === 200) return response.data;\n};\nexport const discourse_classificationEN = async note => {\n  console.log(note);\n  const response = await axios.post( // \"/api/parser\",\n  `${process.env.REACT_APP_API_1}/api/parseren/`, // \"https://localhost:8080/discourseClassifier\",\n  {\n    title: note.title,\n    details: note.details,\n    cateogry: note.cateogry\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.status === 200) return response.data;\n};","map":{"version":3,"names":["axios","require","config","translateNote","note","console","log","response","post","process","env","REACT_APP_API_2","title","details","cateogry","headers","status","data","translateENtoPCM","discourse_classification","REACT_APP_API_1","discourse_classificationEN"],"sources":["/local/home/CE/musaeed/translation_app/src/services/translation.js"],"sourcesContent":["import axios from \"axios\";\nrequire('dotenv').config()\n\nexport const translateNote = async (note) => {\n  console.log(note);\n  const response = await axios.post(\n    `${process.env.REACT_APP_API_2}/pcm_en`,\n    {\n      title: note.title,\n      details: note.details,\n      cateogry: note.cateogry,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (response.status === 200) return response.data;\n};\n\nexport const translateENtoPCM = async (note) => {\n  console.log(note);\n  const response = await axios.post(\n    `${process.env.REACT_APP_API_2}/enpcm`,\n    {\n      title: note.title,\n      details: note.details,\n      cateogry: note.cateogry,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (response.status === 200) return response.data;\n};\nexport const discourse_classification = async (note) => {\n  console.log(note);\n  const response = await axios.post(\n    // \"/api/parser\",\n    `${process.env.REACT_APP_API_1}/api/parser/`,\n    // \"https://localhost:8080/discourseClassifier\",\n    {\n      title: note.title,\n      details: note.details,\n      cateogry: note.cateogry,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (response.status === 200) return response.data;\n};\n\n\nexport const discourse_classificationEN = async (note) => {\n  console.log(note);\n  const response = await axios.post(\n    // \"/api/parser\",\n    `${process.env.REACT_APP_API_1}/api/parseren/`,\n    // \"https://localhost:8080/discourseClassifier\",\n    {\n      title: note.title,\n      details: note.details,\n      cateogry: note.cateogry,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (response.status === 200) return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;EAC3CC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,eAAgB,SADV,EAErB;IACEC,KAAK,EAAER,IAAI,CAACQ,KADd;IAEEC,OAAO,EAAET,IAAI,CAACS,OAFhB;IAGEC,QAAQ,EAAEV,IAAI,CAACU;EAHjB,CAFqB,EAOrB;IACEC,OAAO,EAAE;MACP,gBAAgB;IADT;EADX,CAPqB,CAAvB;EAaA,IAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B,OAAOT,QAAQ,CAACU,IAAhB;AAC9B,CAhBM;AAkBP,OAAO,MAAMC,gBAAgB,GAAG,MAAOd,IAAP,IAAgB;EAC9CC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,eAAgB,QADV,EAErB;IACEC,KAAK,EAAER,IAAI,CAACQ,KADd;IAEEC,OAAO,EAAET,IAAI,CAACS,OAFhB;IAGEC,QAAQ,EAAEV,IAAI,CAACU;EAHjB,CAFqB,EAOrB;IACEC,OAAO,EAAE;MACP,gBAAgB;IADT;EADX,CAPqB,CAAvB;EAaA,IAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B,OAAOT,QAAQ,CAACU,IAAhB;AAC9B,CAhBM;AAiBP,OAAO,MAAME,wBAAwB,GAAG,MAAOf,IAAP,IAAgB;EACtDC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,EACrB;EACC,GAAEC,OAAO,CAACC,GAAR,CAAYU,eAAgB,cAFV,EAGrB;EACA;IACER,KAAK,EAAER,IAAI,CAACQ,KADd;IAEEC,OAAO,EAAET,IAAI,CAACS,OAFhB;IAGEC,QAAQ,EAAEV,IAAI,CAACU;EAHjB,CAJqB,EASrB;IACEC,OAAO,EAAE;MACP,gBAAgB;IADT;EADX,CATqB,CAAvB;EAeA,IAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B,OAAOT,QAAQ,CAACU,IAAhB;AAC9B,CAlBM;AAqBP,OAAO,MAAMI,0BAA0B,GAAG,MAAOjB,IAAP,IAAgB;EACxDC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,EACrB;EACC,GAAEC,OAAO,CAACC,GAAR,CAAYU,eAAgB,gBAFV,EAGrB;EACA;IACER,KAAK,EAAER,IAAI,CAACQ,KADd;IAEEC,OAAO,EAAET,IAAI,CAACS,OAFhB;IAGEC,QAAQ,EAAEV,IAAI,CAACU;EAHjB,CAJqB,EASrB;IACEC,OAAO,EAAE;MACP,gBAAgB;IADT;EADX,CATqB,CAAvB;EAeA,IAAIR,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B,OAAOT,QAAQ,CAACU,IAAhB;AAC9B,CAlBM"},"metadata":{},"sourceType":"module"}